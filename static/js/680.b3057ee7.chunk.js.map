{"version":3,"file":"static/js/680.b3057ee7.chunk.js","mappings":"oNAGaA,EAAaC,EAAAA,GAAAA,GAAH,wIAQVC,EAAYD,EAAAA,GAAAA,GAAH,8RAeTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uGAMTI,EAAWJ,EAAAA,GAAAA,IAAH,+DAKRK,EAAYL,EAAAA,GAAAA,IAAH,0EAKTM,EAAaN,EAAAA,GAAAA,GAAH,mFAMVO,EAAcP,EAAAA,GAAAA,IAAH,gSAeXQ,EAAaR,EAAAA,GAAAA,KAAH,4G,SC5DhB,SAASS,EAAT,GAA2C,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SACnC,OACE,SAACZ,EAAD,UACGW,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,aAAjC,OACV,SAAChB,EAAD,WACE,SAACC,EAAD,CAAWgB,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMT,GAA/C,UACE,UAACN,EAAD,YACE,SAACD,EAAD,CACEiB,IACEP,EAAW,8CACgCA,GACvC,0EAENQ,IAAG,OAAEN,QAAF,IAAEA,EAAAA,EAASD,KAEhB,SAACT,EAAD,iBAAaU,QAAb,IAAaA,EAAAA,EAASD,KACtB,SAACR,EAAD,WAAa,SAACC,EAAD,UAAaS,EAAaM,QAAQ,aAZrCV,EADN,KAoBjB,C,wJCrBc,SAASW,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACMlB,GAAWmB,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBC,EAAAA,EAAAA,MAFzB,OAEUtB,EAFV,OAGIiB,EAAkBjB,GAHtB,gDAKImB,EAAgB,KAAMI,SAL1B,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,KAGD,yBACGN,IACC,SAAC,IAAD,CAAYlB,OAAQgB,EAAgBf,SAAUA,KAIrD,C,+LC3BKwB,EAAU,4CACVC,EAAW,gCAEV,SAAeJ,IAAtB,4CAAO,OAAP,oBAAO,oGACkBK,EAAAA,EAAAA,IAAA,UAAaD,EAAb,6BAA0CD,IAD5D,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBL,EAAAA,EAAAA,IAAA,UAAaD,EAAb,uBAAoCD,EAApC,kBAAqDO,IADvE,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiC9B,GAAjC,uFACkBwB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8BvB,GAA9B,OAAmCsB,IADrD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8B/B,GAA9B,uFACkBwB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8BvB,EAA9B,mBAA2CsB,IAD7D,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiChC,GAAjC,uFACkBwB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8BvB,EAA9B,mBAA2CsB,IAD7D,cACCG,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kE","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","services/moviesAPI.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ListMovies = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 0px;\n  padding: 75px 0px 0px 0px;\n`;\n\nexport const ItemMovie = styled.li`\n  position: relative;\n  width: calc((100% - 10px * 8) / 4);\n  margin: 10px;\n  background-color: black;\n  box-shadow: 0px 0px 5px 2px;\n  border-radius: 5px;\n  list-style: none;\n  :hover,\n  :focus{\n    transform: scale(1.03);\n    cursor: zoom-in;\n  };\n`;\n\nexport const LinkMovie = styled(Link)`\n  display: inline-block;\n  flex-direction: column;\n  text-decoration: none;\n`;\n\nexport const ImgMovie = styled.img`\n  width: 100%;\n  border-radius: 5px;\n`;\n\nexport const CardMovie = styled.div`\n  border-radius: 5px;\n  background-color: #000;\n`;\n\nexport const TitleMovie = styled.h2`\n  font-size: 25px;\n  color: #fff;\n  text-align: center;\n`;\n\nexport const RatingMovie = styled.div`\n  position: absolute;\n  display: flex;\n  top: 10px;\n  right: 10px;\n  width: 40px;\n  height: 40px;\n  text-align: center;\n  vertical-align: bottom;\n  justify-content: center;\n  border-radius: 50px;\n  border: #00ff01 solid 1px;\n  background-color: black;\n`;\n\nexport const RatingText = styled.span`\n  font-size: 23px;\n  margin-top: auto;\n  margin-bottom: auto;\n  color: #ffd300;\n`;\n","import PropTypes from 'prop-types';\nimport { ListMovies, ItemMovie, LinkMovie, CardMovie, ImgMovie, TitleMovie, RatingMovie, RatingText } from 'components/MoviesList/MovieList.styled';\n\nexport function MoviesList({ movies, location }) {\n  return (\n    <ListMovies>\n      {movies.map(({ id, poster_path, name, title, vote_average }) => (\n        <ItemMovie key={id}>\n          <LinkMovie to={`/movies/${id}`} state={{ from: location }}>\n            <CardMovie>\n              <ImgMovie\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/original/${poster_path}`\n                    : 'https://cdn.pixabay.com/photo/2014/03/25/16/27/movie-297135_960_720.png'\n                }\n                alt={title ?? name}\n              />\n              <TitleMovie>{title ?? name}</TitleMovie>\n              <RatingMovie><RatingText>{vote_average.toFixed(1)}</RatingText></RatingMovie>\n            </CardMovie>\n          </LinkMovie>\n        </ItemMovie>\n      ))}\n    </ListMovies>\n  );\n}\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired, \n      poster_path: PropTypes.string, \n      name: PropTypes.string, \n      title: PropTypes.string.isRequired, \n      vote_average: PropTypes.number.isRequired,\n    })\n  ), \n  location: PropTypes.object.isRequired,\n}","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fechMoviesTranding } from 'services/moviesAPI';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nexport default function HomePage() {\n  const [moviesTranding, setMoviesTranding] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const location = useLocation();\n  \n  useEffect(() => {\n    async function fechQuery() {\n      try {\n        const movies = await fechMoviesTranding();\n        setMoviesTranding(movies);\n      } catch (error) {\n        setErrorMessage(error.message);\n      }\n    }\n    fechQuery();\n  }, []);\n\n  return (\n    <div>\n      {errorMessage || (\n        <MoviesList movies={moviesTranding} location={location} />\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '?api_key=1119a115908e1b3ec65f53aa52c34c18';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fechMoviesTranding() {\n  const response = await axios.get(`${BASE_URL}trending/movie/day${API_KEY}`);\n  return response.data.results;\n};\n\nexport async function fechMoviesQuery(query) {\n  const response = await axios.get(`${BASE_URL}search/movie${API_KEY}&query=${query}`);\n  return response.data.results;\n};\n\nexport async function fechMoviesDetails(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}${API_KEY}`);\n  return response.data;\n};\n\nexport async function fechMoviesCast(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}/credits${API_KEY}`);\n  return response.data;\n};\n\nexport async function fechMoviesReviews(id) {\n  const response = await axios.get(`${BASE_URL}movie/${id}/reviews${API_KEY}`);\n  return response.data.results;\n};\n  \n"],"names":["ListMovies","styled","ItemMovie","LinkMovie","Link","ImgMovie","CardMovie","TitleMovie","RatingMovie","RatingText","MoviesList","movies","location","map","id","poster_path","name","title","vote_average","to","state","from","src","alt","toFixed","HomePage","useState","moviesTranding","setMoviesTranding","errorMessage","setErrorMessage","useLocation","useEffect","fechMoviesTranding","message","fechQuery","API_KEY","BASE_URL","axios","response","data","results","fechMoviesQuery","query","fechMoviesDetails","fechMoviesCast","fechMoviesReviews"],"sourceRoot":""}